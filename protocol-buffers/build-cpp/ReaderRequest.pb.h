// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ReaderRequest.proto
// Protobuf C++ Version: 5.29.2

#ifndef ReaderRequest_2eproto_2epb_2eh
#define ReaderRequest_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ReaderRequest_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ReaderRequest_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ReaderRequest_2eproto;
namespace ReaderRequest {
class ReaderRequest;
struct ReaderRequestDefaultTypeInternal;
extern ReaderRequestDefaultTypeInternal _ReaderRequest_default_instance_;
}  // namespace ReaderRequest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ReaderRequest {
enum Command : int {
  Cmd_Err = 0,
  Cmd_SCard_Establish_Context = 101,
  Cmd_SCard_Reader_List = 102,
  Cmd_SCard_Connect_Card = 103,
  Cmd_SCard_Disconnect_Card = 104,
  Cmd_SCard_Transmit = 105,
  Cmd_MI_Get_UID = 201,
  Cmd_MI_Load_Key = 202,
  Cmd_MI_Authentication = 203,
  Cmd_Mi_Read_Block = 204,
  Cmd_Mi_Write_Block = 205,
  Cmd_Mi_Decrement = 206,
  Cmd_Mi_Increment = 207,
  Cmd_Mi_Restore = 208,
  Cmd_Mi_HALT = 209,
  Command_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Command_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Command_IsValid(int value);
extern const uint32_t Command_internal_data_[];
constexpr Command Command_MIN = static_cast<Command>(0);
constexpr Command Command_MAX = static_cast<Command>(209);
constexpr int Command_ARRAYSIZE = 209 + 1;
const ::google::protobuf::EnumDescriptor*
Command_descriptor();
template <typename T>
const std::string& Command_Name(T value) {
  static_assert(std::is_same<T, Command>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Command_Name().");
  return ::google::protobuf::internal::NameOfEnum(Command_descriptor(), value);
}
inline bool Command_Parse(absl::string_view name, Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Command>(
      Command_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ReaderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ReaderRequest.ReaderRequest) */ {
 public:
  inline ReaderRequest() : ReaderRequest(nullptr) {}
  ~ReaderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReaderRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReaderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReaderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReaderRequest(const ReaderRequest& from) : ReaderRequest(nullptr, from) {}
  inline ReaderRequest(ReaderRequest&& from) noexcept
      : ReaderRequest(nullptr, std::move(from)) {}
  inline ReaderRequest& operator=(const ReaderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReaderRequest& operator=(ReaderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReaderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReaderRequest* internal_default_instance() {
    return reinterpret_cast<const ReaderRequest*>(
        &_ReaderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ReaderRequest& a, ReaderRequest& b) { a.Swap(&b); }
  inline void Swap(ReaderRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReaderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReaderRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReaderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReaderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReaderRequest& from) { ReaderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReaderRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ReaderRequest.ReaderRequest"; }

 protected:
  explicit ReaderRequest(::google::protobuf::Arena* arena);
  ReaderRequest(::google::protobuf::Arena* arena, const ReaderRequest& from);
  ReaderRequest(::google::protobuf::Arena* arena, ReaderRequest&& from) noexcept
      : ReaderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 3,
    kCmdFieldNumber = 1,
    kMsgCntFieldNumber = 2,
  };
  // repeated string result = 3;
  int result_size() const;
  private:
  int _internal_result_size() const;

  public:
  void clear_result() ;
  const std::string& result(int index) const;
  std::string* mutable_result(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(int index, Arg_&& value, Args_... args);
  std::string* add_result();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_result(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& result() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_result();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_result() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_result();

  public:
  // .ReaderRequest.Command cmd = 1;
  void clear_cmd() ;
  ::ReaderRequest::Command cmd() const;
  void set_cmd(::ReaderRequest::Command value);

  private:
  ::ReaderRequest::Command _internal_cmd() const;
  void _internal_set_cmd(::ReaderRequest::Command value);

  public:
  // int32 msgCnt = 2;
  void clear_msgcnt() ;
  ::int32_t msgcnt() const;
  void set_msgcnt(::int32_t value);

  private:
  ::int32_t _internal_msgcnt() const;
  void _internal_set_msgcnt(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ReaderRequest.ReaderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      42, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReaderRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> result_;
    int cmd_;
    ::int32_t msgcnt_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ReaderRequest_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ReaderRequest

// .ReaderRequest.Command cmd = 1;
inline void ReaderRequest::clear_cmd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmd_ = 0;
}
inline ::ReaderRequest::Command ReaderRequest::cmd() const {
  // @@protoc_insertion_point(field_get:ReaderRequest.ReaderRequest.cmd)
  return _internal_cmd();
}
inline void ReaderRequest::set_cmd(::ReaderRequest::Command value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:ReaderRequest.ReaderRequest.cmd)
}
inline ::ReaderRequest::Command ReaderRequest::_internal_cmd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ReaderRequest::Command>(_impl_.cmd_);
}
inline void ReaderRequest::_internal_set_cmd(::ReaderRequest::Command value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmd_ = value;
}

// int32 msgCnt = 2;
inline void ReaderRequest::clear_msgcnt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msgcnt_ = 0;
}
inline ::int32_t ReaderRequest::msgcnt() const {
  // @@protoc_insertion_point(field_get:ReaderRequest.ReaderRequest.msgCnt)
  return _internal_msgcnt();
}
inline void ReaderRequest::set_msgcnt(::int32_t value) {
  _internal_set_msgcnt(value);
  // @@protoc_insertion_point(field_set:ReaderRequest.ReaderRequest.msgCnt)
}
inline ::int32_t ReaderRequest::_internal_msgcnt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msgcnt_;
}
inline void ReaderRequest::_internal_set_msgcnt(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msgcnt_ = value;
}

// repeated string result = 3;
inline int ReaderRequest::_internal_result_size() const {
  return _internal_result().size();
}
inline int ReaderRequest::result_size() const {
  return _internal_result_size();
}
inline void ReaderRequest::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_.Clear();
}
inline std::string* ReaderRequest::add_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_result()->Add();
  // @@protoc_insertion_point(field_add_mutable:ReaderRequest.ReaderRequest.result)
  return _s;
}
inline const std::string& ReaderRequest::result(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ReaderRequest.ReaderRequest.result)
  return _internal_result().Get(index);
}
inline std::string* ReaderRequest::mutable_result(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ReaderRequest.ReaderRequest.result)
  return _internal_mutable_result()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ReaderRequest::set_result(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_result()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:ReaderRequest.ReaderRequest.result)
}
template <typename Arg_, typename... Args_>
inline void ReaderRequest::add_result(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_result(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:ReaderRequest.ReaderRequest.result)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ReaderRequest::result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ReaderRequest.ReaderRequest.result)
  return _internal_result();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ReaderRequest::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ReaderRequest.ReaderRequest.result)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_result();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ReaderRequest::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ReaderRequest::_internal_mutable_result() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.result_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace ReaderRequest


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ReaderRequest::Command> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ReaderRequest::Command>() {
  return ::ReaderRequest::Command_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ReaderRequest_2eproto_2epb_2eh
